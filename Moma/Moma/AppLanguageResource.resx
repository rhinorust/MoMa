<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CarDirections" xml:space="preserve">
    <value>➥ Get on Autoroute 40 towards the Autoroute 15

➥ Take Autoroute 15 S

➥ Take Autoroute 720 E

➥ Exit at Rue Saint Antoine O

➥ Turn Right on Rue Lacasse </value>
  </data>
  <data name="CarDirectionsTitle" xml:space="preserve">
    <value>General Directions via Car</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="DefaultLanguage" xml:space="preserve">
    <value>The default language is English. It may be changed at any time in the settings.</value>
  </data>
  <data name="Directions" xml:space="preserve">
    <value>Museum Directions</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LanguageDef" xml:space="preserve">
    <value>Display and exhibitions language</value>
  </data>
  <data name="LanguageSelection" xml:space="preserve">
    <value>Selected language</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>Free Tour</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoInternetConnection" xml:space="preserve">
    <value>Not connected to the internet</value>
  </data>
  <data name="Popup" xml:space="preserve">
    <value>Popup</value>
  </data>
  <data name="PopupDef" xml:space="preserve">
    <value>Automatic popups during exhibitions</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ResetApp" xml:space="preserve">
    <value>Reset Application</value>
  </data>
  <data name="ResetMsg" xml:space="preserve">
    <value>Application will restart automatically.</value>
  </data>
  <data name="ResetTitle" xml:space="preserve">
    <value>Reset Application?</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Scavenger" xml:space="preserve">
    <value>Scavenger Hunt</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsChanged" xml:space="preserve">
    <value>Application settings were modified. The language will be updated upon the next restart of the application.</value>
  </data>
  <data name="SettingsChangedTitle" xml:space="preserve">
    <value>Settings modified</value>
  </data>
  <data name="Sound" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="SoundDef" xml:space="preserve">
    <value>Sounds for notifications</value>
  </data>
  <data name="STMDirections" xml:space="preserve">
    <value>➥ Exit at Place Saint-Henri metro station

➥ Turn left onto Rue Saint-Jacques

➥ Turn Right onto Rue Lenoir</value>
  </data>
  <data name="STMDirectionsTitle" xml:space="preserve">
    <value>General Directions via STM</value>
  </data>
  <data name="Storyline" xml:space="preserve">
    <value>Storylines</value>
  </data>
  <data name="Vibration" xml:space="preserve">
    <value>Vibration</value>
  </data>
  <data name="VibrationDef" xml:space="preserve">
    <value>Phone vibrations for notifications</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Destination" xml:space="preserve">
    <value>➥ Arrive at 1001 Rue Lenoir on Right</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>1001, Lenoir St., local E-206. Montreal,Quebec, H4C 2Z6</value>
  </data>
  <data name="AddressTitle" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="OpeningHours" xml:space="preserve">
    <value>Friday 2 p.m. à 5 p.m.
Saturday 2 p.m. à 5 p.m.
Sunday 2 p.m. à 5 p.m.
Wednesday (Appointment only)
Groups by appointment at anytime.</value>
  </data>
  <data name="OpeningHoursTitle" xml:space="preserve">
    <value>Opening Hours</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone : (514) 932-9663</value>
  </data>
  <data name="PhoneTitle" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Pricing" xml:space="preserve">
    <value>Adult: 5 $
Student: 3 $
Family: 10 $
Groups (5+) : 3 $ each</value>
  </data>
  <data name="PricingTitle" xml:space="preserve">
    <value>Pricing</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>http://moeb.ca/en</value>
  </data>
  <data name="WebsiteTitle" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="Server" xml:space="preserve">
    <value>Update Url</value>
  </data>
  <data name="ServerDef" xml:space="preserve">
    <value>Url from which all medias are being loaded from</value>
  </data>
</root>